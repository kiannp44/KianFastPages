{
  
    
        "post0": {
            "title": "Unit 9 - Inheritance",
            "content": "What is Inheritance? . Imagine you wanted to create a racing game. You would need a bunch of different cars-bugattis, lamborghinis, rolls royce. Each of these cars would have different features; they would have different fuel types, tires, and engines. A car like an Aston Martin would have a spoiler inside the car for aerodynamics. Lambos have cools doors for when you pull up to a race. But all of these cars would also have a lot in common; all cars have gear shifts, gas, breaks, and steering. . We could model each car with its own class, with attributes and methods specific to each car. But we would find that we&#39;re repeating a lot of the same code over and over - it doesn&#39;t really make sense to redefine the methods for gas and breaks for every single car, when it will do the same thing. . This is a great use case for inheritance. We can define a base &quot;Car Class&quot; that has the methods and attributes common to every car - steering methods, gas and break methods, and attributes like speed and miles per gallon. . Each car will &quot;extend&quot; from this base class. This means that it &quot;inherits&quot; the methods and attributes in the base Car Class (this is why it&#39;s called Inheritance). But each of the new car classes, for example a Bugatti Class, will have its own special methods and attributes. . public class Car { protected String brandName; protected double range; protected double doorNumber; protected double maxSpeed; // Constructor for the attributes present in the superclass public Car(String brandName, double range, double doorNumber, double maxSpeed) { this.brandName = brandName; this.range = range; this.doorNumber = doorNumber; this.maxSpeed = maxSpeed; } public void gas () { System.out.println(&quot;Go!&quot;); } public void brake () { System.out.println(&quot;Stop!&quot;); } public void gearShift () { System.out.println(&quot;Use the stick&quot;); } public void steer () { System.out.println(&quot;turning left...&quot;); } public void horn () { System.out.print(&quot;honking... &quot;); } } . public class TeslaModelS extends Car { // Additional attribute not present in the superclass protected String hornSound; // Constructor for Subclass public TeslaModelS(String brandName, double range, double doorNumber, double maxSpeed, String hornSound) { // We use the Superclass constructor for the shared attributes through the keyword &quot;super&quot; super(brandName, range, doorNumber, maxSpeed); // hornSound is not in the Superclass, so we add it separately in the constructor this.hornSound = hornSound; } // We use override to change the functionality in the subclass of an existing method in the superclass @Override public void gearShift () { System.out.println(&quot;Use the gear selector next to the wheel&quot;); } public void steer () { System.out.println(&quot;turning right...&quot;); } // Here, we don&#39;t fully change the functionality of the existing horn method in the superclass // Instead, we take all of the functionality of the superclass method, and then add on to it public void horn () { super.horn(); System.out.println(hornSound); } public static void main(String[] args) { // 5 argument constructor TeslaModelS modelS = new TeslaModelS(&quot;Tesla&quot;, 396, 4, 200, &quot;eugh&quot;); // Example of late binding Car car = new TeslaModelS(&quot;Tesla&quot;, 396, 4, 200, &quot;brrr&quot;); // We can still use the methods from the child class, even though we didn&#39;t mention them in the subclass! modelS.gas(); // Using the overridden method modelS.gearShift(); modelS.steer(); // Using the method we added on to modelS.horn(); car.horn(); } } TeslaModelS.main(null); . Go! Use the gear selector next to the wheel turning right... honking... eugh honking... brrr . Overriding Methods . Overriding allows a subclass or child class to provide a specific implementation of a method that has already been provided by a super-classes or parent classes. When a method in a subclass has the same name, same parameters or signature, and same return type (or sub-type) as a method in its super-class, then the method in the subclass will override the method in the super-class. .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/12/13/unit9.html",
            "relUrl": "/collegeboard/2022/12/13/unit9.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 10 - Recursion",
            "content": "Two parts to the method: . a base case | recursive call. | . After multiple calls, the base case is reached where recursion is stopped and a value is returned . Should be written first to avoid infinite recursion | . Each call has different values that lead to the base case being reached Recursive methods have a call stack that keeps track of all the times that the recursive function is called, as well as their individual parameters .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/12/12/unit10.html",
            "relUrl": "/collegeboard/2022/12/12/unit10.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 8 - 2D Array",
            "content": "Array = a data structure used to implement a collection (list) of primitive or object reference data | Element = a single value in the array | Index = the position of the element in the array (starts from 0) | Array Length = the number of elements in the array | . Example of an Array . public class Test { public static void main(String[] args) { int[][] arr = { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 } }; System.out.println(&quot;arr[0][0] = &quot; + arr[0][0]); System.out.println(&quot;arr[1][2] = &quot; + arr[1][2]); System.out.println(&quot;arr[2][1] = &quot; + arr[2][1]); } } Test.main(null); . arr[0][0] = 1 arr[1][2] = 6 arr[2][1] = 8 . Accessing Elements of Array . public class Test { public static void main(String[] args) { String[][] arr = { { &quot;a&quot;, &quot;f&quot;, &quot;g&quot; }, { &quot;b&quot;, &quot;e&quot;, &quot;h&quot; }, { &quot;c&quot;, &quot;d&quot;, &quot;i&quot; } }; // Print the last element in the array! print() } } Test.main(null); . public class Test { public static void main(String[] args) { String[][] arr = { { &quot;Atlanta&quot;, &quot;Baltimore&quot;, &quot;Chicago&quot; }, { &quot;Australia&quot;, &quot;Boston&quot;, &quot;Cincinnati&quot; }, { &quot;Austin&quot;, &quot;Beaumont&quot;, &quot;Columbus&quot; } }; String longest = arr[0][0]; } } Test.main(null); .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/12/01/unit8.html",
            "relUrl": "/collegeboard/2022/12/01/unit8.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Vocab",
            "content": "Unit 1 . Unit 2 . Unit 3 . Unit 4 . Unit 5 .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/11/29/vocab.html",
            "relUrl": "/collegeboard/2022/11/29/vocab.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Night at The Museum",
            "content": "Pictures . .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/11/07/night.html",
            "relUrl": "/pbl/2022/11/07/night.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "MCQ Practice Test",
            "content": "Score . 31/40 . Corrections . Corrections with reasoning and explaining. . Question 5 . Answer was C : I got this wrong because I was rushing through the question and forgot about the last number and chose the one closest to it. It would multiply and add 3 one last time. Since k &lt; n | . Question 6 . Answer was E: What I chose would have calculated the average and seen if it was greater than equal to, rather than determining if it was close. I wasn&#39;t even close to getting this one right, I honestly was very confused on this question and I think I need to work more on questions like this. | . Question 7 . Answer was D: I made a new object rather than changing the information to the already created object. The new person and the current were not the same. The question was a little difficult to read and understand to me due to the terms. | . Question 22 . Answer was B: Honestly this was a very long question and there were a lot of information that I had to read, comprehend and remember which caused me to trip up the question and get it wrong. | . Question 23 . Answer was B: I got this wrong because I didn&#39;t think about the logic of how it would start at 1 rather than 0 which is usually how it works. | . Question 25 . Answer was A: The answer that I chose did not have a completed method that could be run, and I misread it and got it wrong. | . Question 33 . Answer was A: Since K is never incremented, the and will always be true since the loop will always be less than 4, so it would be an infinite loop. | . Question 35 . Answer was D: Since num is being divided by 10 forever until it is 0, it goes in reverse. I didn&#39;t really understand this and I think I need to work more on lists and loops. | . Question 36 . Answer was B: I just read what each variable was equal to and since there was so many it was hard to keep up with the logic part of it. | .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/11/06/PracticeMCQ.html",
            "relUrl": "/collegeboard/2022/11/06/PracticeMCQ.html",
            "date": " • Nov 6, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Unit 6 Arrays",
            "content": "FRQ . public void addMembers(String[] names, int gradYear) { for (int i = 0; i&lt;names.length; i++) { memberList.add(new Member(names[i], gradYear, true)); } } .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/11/01/unit6.html",
            "relUrl": "/collegeboard/2022/11/01/unit6.html",
            "date": " • Nov 1, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Unit 5 Using Classes",
            "content": "Precondition: condition that must be true before execution of a code block Methods don&#39;t need to check preconditions | Postcondition: condition that is ALWAYS true after the execution of a code block Outcome State of instance variables | . -Allows other objects outside of the class to obtain values of instance variables or static variables -Non-void method returns a single value -Header includes return type (String, int, Long etc) &quot;return by value&quot;: return expression at the end of a method will specify that value that will be returned (must correspond to the type) -Must be used when different classes need to access the instance variables . // always public // must specify return type // getVariable (typical naming convention) // no parameters public String getVariable(){ } . Overridden method that provides description of a specific object (ie values of instance variables) | If System.out.print or System.out.println() is passed an object, that object&#39;s toString() method is called ==&gt; returned string is printed Java default toString() will return a hashcode, but you can manually write your own toString() method | . Wrapper Classes:: Wrapper classes allow converting primitives into objects and vice versa, which allows java to be object oriented, as primitives aren’t an object by default . Someone may use a wrapper class on int to convert it to an object as they contain many methods to deal with an int value like converting it to a string representation, this is the same for doubles | . Math Classes: java math class provides many math methods that allow finding different things, such as a max or min function math.random will return a number between 0.0 and 1.0, or you can multiply it to get 1 to 100 (seen in code) . Example . for (int i = 0; i &lt;5; i++) { int randomNum = (int)(Math.random() * 101); System.out.println(randomNum); } . FRQ Answers . public class StepTracker { private int totalSteps; private int minimumSteps; private int days; private int activeDays; public StepTracker(int min){ minimumSteps = min; totalSteps = 0; days = 0; activeDays = 0; } public void addDailySteps(int steps){ totalSteps += steps; days++; if (steps &gt;= minSteps){ activeDays++; } } public double averageSteps(){ if (days == 0){ return 0.0; } else{ return (double) totalSteps / days; } } public int getActiveDays(){ return days; } } . public class StepTracker { private double Steps = 0; private int activeDays = 0; private int totalDays = 0; private double cutoff = 0; public StepTracker (double Steps) { this.cutoff = Steps; } public void addDailySteps (int Steps) { this.Steps = this.Steps + Steps; if (Steps &gt;= cutoff) { this.activeDays++; } this.totalDays++; } public int activeDays () { return activeDays; } public double averageSteps() { return this.Steps/totalDays; } public static void main (String[] args) { StepTracker tr = new StepTracker(10000); System.out.println(tr.activeDays()); System.out.println(tr.averageSteps()); tr.addDailySteps(9000); tr.addDailySteps(5000); System.out.println(tr.activeDays()); System.out.println(tr.averageSteps()); tr.addDailySteps(13000); System.out.println(tr.activeDays()); System.out.println(tr.averageSteps()); tr.addDailySteps(23000); tr.addDailySteps(1111); System.out.println(tr.activeDays()); System.out.println(tr.averageSteps()); } } StepTracker.main(null); .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/11/01/unit5.html",
            "relUrl": "/collegeboard/2022/11/01/unit5.html",
            "date": " • Nov 1, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Unit 4 Iteration",
            "content": "While loops consist of 2 portions: the boolean expression and the brackets which store the looping code inside. . while (condition) { ... } . The boolean expression is checked before the loop is started and every time the loop ends and is about to start anew. Usually, inside the loop something is done that slightly changes the conditions for the boolean expression until it reads false and ends. In the example below, the condition is x &gt; 0, meaning that x has to be changed for the loop to stop. Inside the loop, x is decremented by 1 every time, changing the conditions over and over again until it finally returns false and terminates the while loop. . int x = 5; // The boolean expression in this case is x &gt; 0 while (x &gt; 0) { System.out.println(x); x--; } . 5 4 3 2 1 . One unique application of while loops lie in infinite while loops, loops that run over and over again permanently. This is usually accomplished by setting the boolean condition to be true at all times. The only way to stop these loops are to use a break command, which ends the loop regardless of the conditions present. . For Loop and Enhanced Loop . Enhanced for loops are easier to use and errors will usually happen less, as you don&#39;t have to manage steps by themselves, but for loops allows you to control everything about looping | For loops you can change by how many steps it iterates and if it goes backwards or forwards | Enhanced for loops will just go forward and increment its steps by 1 | . Nested For Loop . A nested loop is a loop inside of another loop ### Example | . class Main { public static void main(String[] args) { int weeks = 3; int days = 7; for (int i = 1; i &lt;= weeks; ++i) { System.out.println(&quot;Week: &quot; + i); for (int j = 1; j &lt;= days; ++j) { System.out.println(&quot; Day: &quot; + j); } } } } Main.main(null); . Week: 1 Day: 1 Day: 2 Day: 3 Day: 4 Day: 5 Day: 6 Day: 7 Week: 2 Day: 1 Day: 2 Day: 3 Day: 4 Day: 5 Day: 6 Day: 7 Week: 3 Day: 1 Day: 2 Day: 3 Day: 4 Day: 5 Day: 6 Day: 7 . Hacks . public class WhileLoops { public static void main(String[] args) { int i = 5450000; int years = 0; while (i &lt; 30000000){ i *= 1.05; years += 1; } System.out.println(years); } } WhileLoops.main(null); . 35 . public class ForLoops { public static void main(String[] args) { for (int x = 10; x &lt;= 15; x++) { System.out.println(x); } } } ForLoops.main(null); . 10 11 12 13 14 15 . public class ForLoops { public static void main(String[] args) { for (int x = 10; x &lt;= 25; x++) { System.out.println(x * 9/5 + 32); } } } ForLoops.main(null); . 50 51 53 55 57 59 60 62 64 66 68 69 71 73 75 77 . int numbers[] = {2, 5, 7, 12}; int sum = 0; for (int num: numbers){ sum += num; } System.out.println(sum); . 26 . public class CaesarCipher { private final String[] letters = {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;}; private String newMsg; public String Decipher(String msg){ this.newMsg = &quot;&quot;; for(int i = 0; i &lt; msg.length(); i++){ if(msg.substring(i, i+1).equals(&quot; &quot;)){ this.newMsg += &quot; &quot;; } else{ for(int k = 0; k &lt; letters.length; k++){ if(msg.substring(i, i+1).equals(this.letters[k])){ if(k + 3 &gt; 25){ // largest index is 25 because starts from 0 this.newMsg += letters[k + 3 - 26]; // subtract 26 because still shift 26 letters } else{ this.newMsg += letters[k + 3]; } } } } } return this.newMsg; } public static void main(String[] args) { // String message1 = &quot;Kfzb gly!&quot;; String message1 = &quot;kfzb gly!&quot;; String message2 = &quot;zlab zlab zlab&quot;; String message3 = &quot;prmbozxifcoxdfifpqfzbumfxifalzflrp&quot;; CaesarCipher solver = new CaesarCipher(); System.out.println(solver.Decipher(message1)); System.out.println(solver.Decipher(message2)); System.out.println(solver.Decipher(message3)); } } CaesarCipher.main(null); . nice job code code code supercalifragilisticexpialidocious .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/11/01/unit4hw.html",
            "relUrl": "/collegeboard/2022/11/01/unit4hw.html",
            "date": " • Nov 1, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Unit 2 Objects",
            "content": ". Objects are instances of Classes, which are like a template of data (attributes) and functions (methods) | Objects are created and their contents, which are pulled from the class, is used in code | . public class Tennis { // class creation public void printPlayers(){ // simple method System.out.println(&quot;Nadal&quot;); System.out.println(&quot;Federer&quot;); System.out.println(&quot;Djokovic&quot;); } public static void main(String[] args){ // main class that runs Tennis myObject = new Tennis(); // CREATING AN OBJECT FROM TENNIS CLASS myObject.printPlayers(); // Use dot notation to reference methods/attributes from the class that the object is initialized from } } Tennis.main(null); . Extending another Class inherits all of the methods and attributes from that class. | Class being extended is called the super class | Class extending is called subclass | . public class TennisTwo extends Tennis{ // extending Tennis class public TennisTwo(){ // TennisTwo now has all of Tennis&#39;s methods super(); } public static void main(String[] args){ // main class that runs TennisTwo myObjectTwo = new TennisTwo(); // CREATING AN OBJECT FROM TENNISTWO CLASS myObjectTwo.printPlayers(); // Use dot notation to reference methods/attributes from the INHERITED class } } TennisTwo.main(null); . Comparing Objects . equals and hashCode methods can be used to compare objects | equals method compares equality of two objects ### Example | . import java.io.*; class Pet { String name; int age; String breed; Pet(String name, int age, String breed) { this.name = name; this.age = age; this.breed = breed; } } public class Main { public static void main(String args[]) { Pet dog1 = new Pet(&quot;Snow&quot;, 3, &quot;German Shepherd&quot;); Pet cat = new Pet(&quot;Jack&quot;, 2, &quot;Tabby&quot;); Pet dog2 = new Pet(&quot;Snow&quot;, 3, &quot;German Shepherd&quot;); System.out.println(dog1.equals(dog2)); } } Main.main(null); . false . FRQ . public int scoreGuess( String guess ) { int val = 0; int len = guess.length(); for( int i = 0; i &lt;= secret.length()-len; i+=1) { String ck = secret.substring( i, i+len ); if( ck.equals(guess) ) val++; } return val*len*len; } . public String findBetterGuess(String guess1, String guess2 ) { int a = scoreGuess( guess1 ); int b = scoreGuess( guess2 ); if( a &gt; b ) return guess1; if( b &gt; a ) return guess2; if( guess1.compareTo( guess2 ) &gt; 0 ) return guess1; return guess2; } .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/11/01/unit2hw.html",
            "relUrl": "/collegeboard/2022/11/01/unit2hw.html",
            "date": " • Nov 1, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Unit 1 Primitives",
            "content": "All code that runs must be in the main method | Data types are different categories in which one can store various types of data. The main Primitve data types are: Integer (int): used for whole numbers Double (double): used for numbers with decimals Boolean (boolean): used for true or false conditionals For Primitive types, variables store actual data instead of reference If the variable is declared final, it cannot be edited A non Primitive type which is commonly used is String Stores text | To comment your code, use // for single line comments and /**/ for multiple lines | . In order to perform mathmatical calculations on integers and doubles, you can use operators | Main ones are +, -, *, / | Modulus is %, used to get remainder when two numbers are divided | Example . public class Math { public static void main(String[] args) { int number = 2; int number2 = 5; double number3 = 2.0; double number4 = 5.0; System.out.println(number+number2); System.out.println(number3+number4); System.out.println(number-number2); System.out.println(number3-number4); System.out.println(number * number2); System.out.println(number3 * number4); System.out.println(number/number2); System.out.println(number3/number4); System.out.println(number4 % number3); System.out.println(number2 % number); } } Math.main(null); . 7 7.0 -3 -3.0 10 10.0 0 0.4 1.0 1 . Compute the remainder of 6 multiplied by 1234124 divided by 11345 minus 890809 plus 90800 (use order of operations) is divided by 980098, and store this in a variable called num (get an exact number as opposed to a whole number) . public class Cast { public static void main(String[] args) { double num = 10.5; int num2 = 100; int numInt = (int)num; double num2Double = (double)num2; System.out.println(num); System.out.println(num2); System.out.println(numInt); System.out.println(num2Double); System.out.println(Integer.MAX_VALUE); System.out.println(Integer.MIN_VALUE); } } Cast.main(null); . 10.5 100 10 100.0 2147483647 -2147483648 . Assignment Operators . += adds value of a variabe to another variable and assigns total value to first variable | -= subtracts value of a variabe to another variable and assigns total value to first variable | *= multiplies value of a variabe to another variable and assigns total value to first variable | /= multiplies value of a variabe to another variable and assigns total value to first variable | %= takes the remainder of a variable with a second variable and assigns remainder to first variable | ++ increments a variable by 1, to incrememt by more change second plus to number which you want to incrememnt by | -- subracts a variable by 1, to incrememt by more change second plus to number which you want to subtract by | . Casting: &quot;When you assign a value of one primitive type to another type.&quot; You can use it to round a number or truncuate it . Casting Example . int myInt = 9; double myDouble = myInt; // Automatic casting: int to double System.out.println(myInt); // Outputs 9 System.out.println(myDouble); // Outputs 9.0 . 9 9.0 . Trunacte: to trim some digits of a float or double-type number or some characters of a string from the right . Truncate Example . import java.lang.Math; public class Program { public static void main(String[] args) { double test1 = 1.234; double test2 = -1.567; // ... Math.floor will always go towards negative infinity. System.out.println(Math.floor(test1)); System.out.println(Math.floor(test2)); // ... Math.round may go towards negative or positive infinity. System.out.println(Math.round(test1)); System.out.println(Math.round(test2)); // ... Casting to int will remove the fractional part. // This truncates the number. System.out.println((int) test1); System.out.println((int) test2); } } . Homework . Hack 1.1 . public class Printing { public static void main(String[] args){ System.out.println(&quot;Kian Pasokhi&quot;); System.out.println(&quot;Period 2&quot;); } } Printing.main(null); . Kian Pasokhi Period 2 . Hack 1.2 . public class Biodata { public static void main(String[] args) { String name = &quot;Kian Pasokhi&quot;; int age = 17; boolean underclassman = false; double height = 5.7; System.out.println(name); System.out.println(age); System.out.println(underclassman); System.out.println(height); } } Biodata.main(null); . Kian Pasokhi 17 false 5.7 . Hack 1.3 . public class Num { public static void main(String[] args) { double num = ( ( 123 * 15003 ) / 11345 ); System.out.println(num); } } Num.main(null); . 162.0 . Hack 1.4 . public class Operators { public static void main(String[] args) { long num = 23948294; num %= 4; System.out.println(&quot;Remainder when divided by 4 is &quot; + num); } } Operators.main(null); . Remainder when divided by 4 is 2 . Hack 1.5 . public class CastActivity { public static void main(String[] args) { double dNum = 123456.123456; int dInt = (int) dNum; System.out.println(&quot;the double to the integer is: &quot; + dInt); } } CastActivity.main(null); . the double to the integer is: 123456 . Code Example . public class Main { public static void main (String[] args) { Scanner sc = new Scanner(System.in); System.out.println(&quot;What is your name?&quot;); String name = sc.next(); //string System.out.println(name); System.out.println(&quot;How many pizzas do you want to buy?&quot;); int pizzas = sc.nextInt(); //integer System.out.println(pizzas); System.out.println(&quot;Do you have the discount (true/false)?&quot;); boolean hasDiscount = sc.nextBoolean(); //boolean System.out.println(hasDiscount); double price; //double, defaults to 0 if (hasDiscount) { price = 1.20; } else { price = 2.10; } char firstChar = name.charAt(0); //character double finalPrice = price * pizzas * 1.08; // adding taxes System.out.println(&quot;Hi &quot; + firstChar + &quot;! You have to pay &quot; + (finalPrice) + &quot; dollars.&quot;); } } Main.main(null); . GPA Calculator . import java.util.Scanner; import java.lang.Math; public class GradeCalculator { private String category; private double current; private double percent; private double desired; private double test; private double percent_test; private double current_test; private int points_test; private int points_final; public double calculate() { this.enterCat(); if (category.equals(&quot;separate&quot;)) { this.enterVals(); // current * (1-percent) + final * percent = desired test = (desired - (current * (1-percent/100))) / (percent/100); // Ex. 95 - (90 * (1 - .20)) / .20 } else if (category.equals(&quot;tests&quot;)) { this.enterPoints(); // current_points = current * 100 - percent_test * points_test // percent_test * (points_test + points_final) + (1-percent_test) * (current_points) = desired percent_test /= 100; int current_points = (int)current - (int)(percent_test) * points_test; test = ((desired - ((1-percent_test)*current_points)/percent_test) - points_test); } return test; } private void enterCat() { while (true) { Scanner dd = new Scanner(System.in); System.out.print(&quot;Enter final category (separate/tests): &quot;); try { category = dd.nextLine(); System.out.println(category); break; } catch (Exception e) { // catch non-numerical input System.out.println(&quot;Not a string, &quot; + e); } dd.close(); } } private void enterVals() { while (true) { Scanner dd2 = new Scanner(System.in); try { System.out.print(&quot;Current grade: &quot;); current = dd2.nextDouble(); System.out.println(current); System.out.print(&quot;Percentage of grade that is final: &quot;); percent = dd2.nextDouble(); System.out.println(percent); System.out.print(&quot;Desired grade: &quot;); desired = dd2.nextDouble(); System.out.println(desired); break; } catch (Exception e) { // catch non-numerical input System.out.println(current + &quot;not a double, &quot; + e); } dd2.close(); } } private void enterPoints() { while (true) { Scanner dd3 = new Scanner(System.in); try { System.out.print(&quot;Current grade: &quot;); current = dd3.nextDouble(); System.out.println(current); System.out.print(&quot;Percentage of grade that is tests: &quot;); percent = dd3.nextDouble(); System.out.println(percent_test); System.out.print(&quot;Current percent in tests: &quot;); current_test = dd3.nextDouble(); System.out.println(current_test); System.out.print(&quot;Current amount of points in tests: &quot;); points_test = dd3.nextInt(); System.out.println(points_test); System.out.print(&quot;Amount of points in final: &quot;); points_final = dd3.nextInt(); System.out.println(points_final); System.out.print(&quot;Desired grade: &quot;); desired = dd3.nextDouble(); System.out.println(desired); break; } catch (Exception e) { // catch non-numerical input System.out.println(current + &quot;not a double, &quot; + e); } dd3.close(); } } public static void main(String[] args) { // main method GradeCalculator calc = new GradeCalculator(); System.out.println(&quot;You need a &quot; + String.format(&quot;%.2f&quot;, calc.calculate()) + &quot; on the test&quot;); } } GradeCalculator.main(null); . Enter final category (separate/tests): separate Current grade: 90.0 Percentage of grade that is final: 50.0 Desired grade: 20.0 You need a -50.00 on the test .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/11/01/unit1hw.html",
            "relUrl": "/collegeboard/2022/11/01/unit1hw.html",
            "date": " • Nov 1, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Array List",
            "content": "import java.util.*; // create an empty array list with an initial capacity ArrayList&lt;String&gt; student_list = new ArrayList&lt;String&gt;(7); // use add() method to add values in the list student_list.add(&quot;Kian P&quot;); student_list.add(&quot;Samuel W&quot;); student_list.add(&quot;Evan S&quot;); student_list.add(&quot;Calissa T&quot;); student_list.add(&quot;Student Name&quot;); // Insert Nocolor in 2nd and 4th position in the list student_list.add(1,&quot;2nd Student&quot;); student_list.add(3,&quot;4th Student&quot;); // Print out the colors in the ArrayList for (int i = 0; i &lt; 7; i++) { System.out.println(student_list.get(i).toString()); } . Kian P 2nd Student Samuel W 4th Student Evan S Calissa T Student Name . // create an empty array list with an initial capacity ArrayList&lt;String&gt; student_list1 = new ArrayList&lt;String&gt;(7); // use add() method to add values in the list student_list1.add(&quot;New Student&quot;); student_list1.add(&quot;New Student 2&quot;); student_list1.add(&quot;New Student 3&quot;); student_list1.add(&quot;New Student 4&quot;); student_list1.add(&quot;New Student 5&quot;); // Insert Nocolor in 2nd and 4th position in the list student_list1.add(1,&quot;2nd New Student&quot;); student_list1.add(3,&quot;4th New Student&quot;); // Combines the two lists together inside of the student_list student_list1.addAll(student_list1); for (int i = 0; i &lt; 14; i++) { System.out.println(student_list1.get(i).toString()); } . New Student 2nd New Student New Student 2 4th New Student New Student 3 New Student 4 New Student 5 New Student 2nd New Student New Student 2 4th New Student New Student 3 New Student 4 New Student 5 . student_list.size(); . 7 . student_list.remove(3); for (int i = 0; i &lt; 6; i++) { System.out.println(student_list.get(i).toString()); } . Kian P 2nd Student Samuel W Evan S Calissa T Student Name . student_list.remove(&quot;Student Name&quot;); for (int i = 0; i &lt; 5; i++) { System.out.println(student_list.get(i).toString()); } . Kian P 2nd Student Samuel W Evan S Calissa T . student_list.get(5); . Calissa T . student_list.set(0, &quot;Samuel W&quot;); for (int i = 0; i &lt; 7; i++) { System.out.println(student_list.get(i).toString()); } . Samuel W 2nd Student Samuel W 4th Student Evan S Calissa T Student Name . student_list.indexOf(&quot;Calissa T&quot;); . 5 . student_list.equals(&quot;Kian P&quot;); . false . student_list.hashCode(); . -1788816664 . ArrayList&lt;String&gt; kianpas_list = new ArrayList&lt;String&gt;(7); kianpas_list.isEmpty(); . true . import java.util.Collections; // Sorts the string in alphabetical order Collections.sort(student_list); for (int i = 0; i &lt; 7; i++) { System.out.println(student_list.get(i).toString()); } . 2nd Student 4th Student Calissa T Evan S Samuel W Samuel W Student Name .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/10/09/ArrayList.html",
            "relUrl": "/pbl/2022/10/09/ArrayList.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Bing News API",
            "content": "Bing News API . import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://bing-news-search1.p.rapidapi.com/news?safeSearch=Off&amp;textFormat=Raw&quot;)) .header(&quot;X-BingApis-SDK&quot;, &quot;true&quot;) .header(&quot;X-RapidAPI-Key&quot;, &quot;74bd99649amsha1c396dfa85e888p1c1773jsn35b095711d42&quot;) .header(&quot;X-RapidAPI-Host&quot;, &quot;bing-news-search1.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); System.out.println(response.body()); . {&#34;_type&#34;: &#34;News&#34;, &#34;webSearchUrl&#34;: &#34;https: / /www.bing.com /news /search?q=top+stories&amp;form=TNSA02&#34;, &#34;value&#34;: [{&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Russia’s ‘kamikaze’ drones pose new threat, Ukraine says&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /world /russia-s-kamikaze-drones-pose-new-threat-ukraine-says /ar-AA12FYMR&#34;, &#34;description&#34;: &#34;Ukraine is accusing Russia of striking deep inside its territory with what it says are Iranian-made “kamikaze” drones as Moscow’s troops are facing mounting setbacks on the battlefield.Ukrainian&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;NBC News&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.ighWNnrr5MMFUs8WKMme2A&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T16:35:02.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Dozens dead after mass shooting at child-care center in Thailand&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /world /dozens-dead-after-mass-shooting-at-child-care-center-in-thailand /ar-AA12ERV4&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=OVFT.HFQLecyMrSXP5L7h_HRmBy&amp;pid=News&#34;, &#34;width&#34;: 1200, &#34;height&#34;: 630}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34; At least 36 people, including 24 children, were dead after a mass shooting at a child-care center in northeast Thailand, the country&#39;s Central Investigation Bureau said. The suspect, who was&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;ABC News&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.-LMnifaGw_NvPvJr_0E9tA&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T13:37:41.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Russian missiles slam apartments; refugees missing at border&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /world /russian-missiles-slam-apartments-refugees-missing-at-border /ar-AA12ENa3&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=OVFT.sOfz4AeIwH5eH-z-WXoAuS&amp;pid=News&#34;, &#34;width&#34;: 1200, &#34;height&#34;: 630}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34;KYIV, Ukraine (AP) — Russian missiles hit apartment buildings in the southern Ukrainian city of Zaporizhzhia on Thursday, a local official said, killing three people and wounding at least 12 in a&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;The Associated Press&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.AlMAEy7MoWNz0OI_xSWQiw&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T07:43:29.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Kevin Spacey faces sexual misconduct civil trial in NY&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /money /companies /kevin-spacey-faces-sexual-misconduct-civil-trial-in-ny /ar-AA12EUhK&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=OVFT.H3ij49Ba0s2Qb7d1aroYey&amp;pid=News&#34;, &#34;width&#34;: 1200, &#34;height&#34;: 630}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34;NEW YORK (Reuters) - It has been just under five years since Kevin Spacey&#39;s Oscar-winning career was upended by a slew of sexual misconduct accusations, starting when Anthony Rapp accused him of&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;Reuters&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.jFXbg3L7Ce_1pS4_IOR8CA&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T10:07:52.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Live Updates: Russia-Ukraine War&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /world /live-updates-russia-ukraine-war /ar-AA12EZ7b&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=OVFT.RHpEa0UBKGEFRaDAeuva9i&amp;pid=News&#34;, &#34;width&#34;: 1200, &#34;height&#34;: 630}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34;KYIV, Ukraine — The head of Ukraine’s human rights commission says Russian authorities detained hundreds of Ukrainians as they neared Russia&#39;s border with Estonia.Dmytro Lubinets wrote in a post on&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;The Associated Press&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.AlMAEy7MoWNz0OI_xSWQiw&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T10:01:22.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Biden visiting New York with IBM poised to announce $20B program; what to know&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /politics /biden-visiting-new-york-with-ibm-poised-to-announce-20b-program-what-to-know /ar-AA12FuaW&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ORMS.e23b23cd603d79bf68ad363ed1790978&amp;pid=Wdp&#34;, &#34;width&#34;: 3114, &#34;height&#34;: 2336}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34;IBM is expected to announce a $20 billion initiative when President Joe Biden visits the company’s Poughkeepsie facility Thursday afternoon. &#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;USA TODAY&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.m1iod5ODNIyyKu23kGIllQ&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T12:43:03.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Report: Mom of Walker&#39;s child says he paid for her abortion&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /politics /report-mom-of-walkers-child-says-he-paid-for-her-abortion /ar-AA12E7oD&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=OVFT.ikzp5XPH_sxsgAVVUZJyGS&amp;pid=News&#34;, &#34;width&#34;: 1200, &#34;height&#34;: 630}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34;ATLANTA (AP) — A woman who said Herschel Walker paid for her 2009 abortion is the mother of one of his children, according to a new report Wednesday, undercutting the Georgia Republican Senate&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;The Associated Press&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.AlMAEy7MoWNz0OI_xSWQiw&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T02:24:19.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Russian Missiles Hit Civilian Targets in Southeastern Ukraine&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /world /russian-missiles-hit-civilian-targets-in-southeastern-ukraine /ar-AA12ETig&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=OVFT.hGn8BxGACUGhjEPh6Imbgy&amp;pid=News&#34;, &#34;width&#34;: 552, &#34;height&#34;: 314}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34;KYIV, Ukraine—Russian missiles struck the city center of the southeastern Ukrainian city of Zaporizhzhia, killing at least one person early on Thursday while Ukraine’s forces reclaimed more territory&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;The Wall Street Journal.&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.15fnkpKGfQuTaaskfJ-smw&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T10:29:00.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Rochester reaches $12M settlement for Daniel Prude&#39;s kids&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /crime /rochester-reaches-12m-settlement-for-daniel-prudes-kids /ar-AA12FKCH&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ORMS.1201afeaeb96a5a29685d803ea07dc2b&amp;pid=Wdp&#34;, &#34;width&#34;: 4268, &#34;height&#34;: 2764}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34;ROCHESTER, N.Y. (AP) — City officials agreed to pay $12 million to the children of Daniel Prude, a Black man who died after police held him down until he stopped breathing after encountering him&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;The Associated Press&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.AlMAEy7MoWNz0OI_xSWQiw&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T15:46:09.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Search continues for missing California family of four as new video shows kidnapping at gunpoint&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /crime /search-continues-for-missing-california-family-of-four-as-new-video-shows-kidnapping-at-gunpoint /ar-AA12DQ2m&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=OVFT.3RxLOfwTGZf1NiXwQLk6wS&amp;pid=News&#34;, &#34;width&#34;: 600, &#34;height&#34;: 315}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34; Authorities released surveillance video Wednesday showing the moments a masked suspect kidnapped a California family of four, including an 8-month-old girl, at gunpoint.  A&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;USA TODAY&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.m1iod5ODNIyyKu23kGIllQ&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-05T19:47:38.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Amid end to COVID help, homelessness surging in many cities&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /us /amid-end-to-covid-help-homelessness-surging-in-many-cities /ar-AA12FJah&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ORMS.69f298ae668b8a38358b222fed8b1144&amp;pid=Wdp&#34;, &#34;width&#34;: 4206, &#34;height&#34;: 2805}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34;SACRAMENTO, Calif. (AP) — In California’s capital, massive tent encampments have risen along the American River and highway overpasses have become havens for homeless people, whose numbers have&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;The Associated Press&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.AlMAEy7MoWNz0OI_xSWQiw&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T14:11:21.0000000Z&#34;}, {&#34;_type&#34;: &#34;NewsArticle&#34;, &#34;name&#34;: &#34;Over 60 clinics in 15 U.S. states ceased abortion care post-Roe - study&#34;, &#34;url&#34;: &#34;https: / /www.msn.com /en-us /news /us /over-60-clinics-in-15-us-states-ceased-abortion-care-post-roe-study /ar-AA12Etc6&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=OVFT.prxiNufAvx8go_rm63pboS&amp;pid=News&#34;, &#34;width&#34;: 1200, &#34;height&#34;: 630}, &#34;isLicensed&#34;: true}, &#34;description&#34;: &#34;By Gabriella Borter WASHINGTON (Reuters) - More than 60 abortion clinics across 15 states have stopped providing abortions since the U.S. Supreme Court overturned Roe v. Wade in June, according&#34;, &#34;provider&#34;: [{&#34;_type&#34;: &#34;Organization&#34;, &#34;name&#34;: &#34;Reuters&#34;, &#34;image&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;thumbnail&#34;: {&#34;_type&#34;: &#34;ImageObject&#34;, &#34;contentUrl&#34;: &#34;https: / /www.bing.com /th?id=ODF.jFXbg3L7Ce_1pS4_IOR8CA&amp;pid=news&#34;}}}], &#34;datePublished&#34;: &#34;2022-10-06T04:09:11.0000000Z&#34;}]} .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/10/02/API.html",
            "relUrl": "/pbl/2022/10/02/API.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Images",
            "content": "import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private final String greyDir = &quot;images/tmp/greyscale/&quot;; private final String redDir = &quot;images/tmp/red/&quot;; private final String blueDir = &quot;images/tmp/blue/&quot;; private final String greenDir = &quot;images/tmp/green/&quot;; private String inFile; private String resizedFile; private String redFile; private String greenFile; private String blueFile; private String greyscaleFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.greyscaleFile = this.greyDir + name + &quot;_grey&quot; + &quot;.&quot; + ext; this.redFile = this.redDir + name + &quot;_red&quot; + &quot;.&quot; + ext; this.blueFile = this.blueDir + name + &quot;_blue&quot; + &quot;.&quot; + ext; this.greenFile = this.greenDir + name + &quot;_green&quot; + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } public void greyscale() { BufferedImage img = null; BufferedImage greyImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data greyImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) (co.getRed() * 0.299); int green = (int) (co.getGreen() * 0.587); int blue = (int) (co.getBlue() * 0.114); int total = red + green + blue; Color newColor = new Color( total, total, total ); greyImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(greyImg), this.ext, new File(greyscaleFile)); } catch (IOException e) { return; } this.inFile = this.greyscaleFile; // use scaled file vs original file in Class this.setStats(); } public void redscale() { BufferedImage img = null; BufferedImage redImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data redImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) co.getRed(); int green = 0; int blue = 0; Color newColor = new Color( red, green, blue); redImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(redImg), this.ext, new File(redFile)); } catch (IOException e) { return; } this.inFile = this.redFile; // use scaled file vs original file in Class this.setStats(); } public void greenscale() { BufferedImage img = null; BufferedImage greenImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data greenImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = 0; int green = (int) co.getGreen(); int blue = 0; Color newColor = new Color( red, green, blue); greenImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(greenImg), this.ext, new File(greenFile)); } catch (IOException e) { return; } this.inFile = this.greenFile; // use scaled file vs original file in Class this.setStats(); } public void bluescale() { BufferedImage img = null; BufferedImage blueImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data blueImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) (co.getRed() * 0.299); int green = (int) (co.getGreen() * 0.587); int blue = (int) (co.getBlue() * 0.114); int total = red + green + blue; Color newColor = new Color(0, 0, total); blueImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(blueImg), this.ext, new File(blueFile)); } catch (IOException e) { return; } this.inFile = this.blueFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { if (i % 2 != 0) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } } public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics ninja = new Pics(&quot;ninja&quot;, &quot;png&quot;); ninja.greyscale(); ninja.redscale(); ninja.greenscale(); ninja.bluescale(); ninja.printStats(&quot;Original&quot;); ninja.resize(33); ninja.printStats(&quot;Scaled&quot;); ninja.convertToAscii(); ninja.printStats(&quot;redscale&quot;); ninja.printStats(&quot;bluescale&quot;); ninja.printStats(&quot;greenscale&quot;); ninja.printStats(&quot;greyscale&quot;); } } Pics.main(null); . Original: 465 160x160 images/tmp/blue/ninja_blue.png Scaled: 176 53x53 images/tmp/ninja.png redscale: 176 53x53 images/tmp/ninja.png bluescale: 176 53x53 images/tmp/ninja.png greenscale: 176 53x53 images/tmp/ninja.png greyscale: 176 53x53 images/tmp/ninja.png . .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/09/28/images.html",
            "relUrl": "/pbl/2022/09/28/images.html",
            "date": " • Sep 28, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Frontend Java",
            "content": ". My To Do List . Add Hit the gym | Pay bills | Meet George | Buy eggs | Read a book | Organize office | . .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/09/26/front.html",
            "relUrl": "/pbl/2022/09/26/front.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Fibonacci",
            "content": "For Loop . class For { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int n; System.out.print(&quot;Enter number of terms: &quot;); n = scanner.nextInt(); System.out.println(n); int firstTerm = 0, secondTerm = 1; for (int i = 1; i &lt;= n; ++i) { System.out.print(firstTerm + &quot;, &quot;); // compute the next term int nextTerm = firstTerm + secondTerm; firstTerm = secondTerm; secondTerm = nextTerm; } } } For.main(null) . Enter number of terms: 12 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, . While Loop . class While { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int n; System.out.print(&quot;Enter number of terms: &quot;); n = scanner.nextInt(); System.out.println(n); int i = 1, firstTerm = 0, secondTerm = 1; while (i &lt;= n) { System.out.print(firstTerm + &quot;, &quot;); int nextTerm = firstTerm + secondTerm; firstTerm = secondTerm; secondTerm = nextTerm; i++; } } } While.main(null) . Enter number of terms: 12 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, . Recursion . public class FibonacciRecursion{ public static int recursion(int n){ if(n == 0){ return 0; } if(n == 1 || n == 2){ return 1; } return recursion(n-2) + recursion(n-1); } public static void main(String args[]) { Scanner scanner = new Scanner(System.in); int n; System.out.print(&quot;Enter number of terms: &quot;); n = scanner.nextInt(); System.out.println(n); System.out.print(&quot;Fibonacci Series of &quot;+ n +&quot; numbers: &quot;); for(int i = 0; i &lt; n; i++){ System.out.print(recursion(i) +&quot; &quot;); } } } FibonacciRecursion.main(null); . Enter number of terms: 12 Fibonacci Series of 12 numbers: 0 1 1 2 3 5 8 13 21 34 55 89 . Abstract . import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Init method = Stream fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/09/25/Fibonacci.html",
            "relUrl": "/pbl/2022/09/25/Fibonacci.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "FRQ Questions",
            "content": "2019 Free Response Question . Source PDF . Assignment is to create instantiate a getScore method. | . getScore Method . public int getScore() { int score = 0; // initialize int if(levelOne.goalReached()) // if level 1 is completed... { score += levelOne.getPoints(); // adds level 1 points if(levelTwo.goalReached()) // if level 2 is completed... { score += levelTwo.getPoints(); // adds level 2 points if(levelThree.goalReached()) // if level 3 is completed... { score += levelThree.getPoints(); // adds level 3 points } } } if(isBonus()) score *= 3; // if it is a bonus game, multiply by 3 return score; // returns int: final score } . playManyTimes Method . Returns highest game score | . public int playManyTimes(int num) { int score = 0; // initialize int for(int i = 0; g i &lt; num; i++) { play(); // call play if (getScore() &gt; score) { score = getScore(); // change score values } } return bestScore; // return int: best score } . Sources . https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Addition_assignment https://apcentral.collegeboard.org/media/pdf/ap22-frq-computer-science-a.pdf?course=ap-computer-science-a https://www.w3schools.com/java/default.asp https://www.w3schools.com/java/java_for_loop.asp https://www.youtube.com/watch?v=1uHSJ08-zhA .",
            "url": "https://kiannp44.github.io/KianFastPages/collegeboard/2022/09/19/frq1.html",
            "relUrl": "/collegeboard/2022/09/19/frq1.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "2D Array",
            "content": "class AppleLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] apples; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] /** * Constructor initializes a 2D array of Apples */ public AppleLoop() { //Storing Data in 2D arrays apples = new String[][]{ //Apple 0 { &quot; ,--./,-.&quot;, // Apple &quot; [ # ] &quot;, &quot;| 1 |&quot;, &quot; [ ] &quot;, &quot; `._,._,&#39;&quot; }, //Apple 1 { &quot; ,--./,-.&quot;, &quot; [ # ] &quot;, &quot;| 2 |&quot;, &quot; [ ] &quot;, &quot; `._,._,&#39;&quot; }, //Apple 2 { &quot; ,--./,-.&quot;, &quot; [ # ] &quot;, &quot;| 3 |&quot;, &quot; [ ] &quot;, &quot; `._,._,&#39;&quot; }, //Apple 3 { &quot; ,--./,-.&quot;, &quot; [ # ] &quot;, &quot;| 4 |&quot;, &quot; [ ] &quot;, &quot; `._,._,&#39;&#39; &quot; }, //Apple 4 { &quot; ,--./,-.&quot;, &quot; [ # ] &quot;, &quot;| 5 |&quot;, &quot; [ ] &quot;, &quot; `._,._,&#39;&#39; &quot; }, }; } /** * Loop and print apples in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Missing Apple Poem&quot;); // apples (non-primitive) defined in constructor knows its length int appleCount = apples.length; for (int i = appleCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Apples // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; apples on the table...&quot;); //how many separate parts are there in a apple apple? for (int row = 0; row &lt; appleCount; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each apple part by part, will eventually print entire column*/ for (int col = 0; col &lt; apples[row].length; col++) { // prints specific part of the apple from the column System.out.print(apples[row][col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } //this new line gives separation between stanza of poem System.out.println(&quot;&quot;); } //countdown for poem, decrementing appleCount variable by 1 appleCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot; No more apples are left!&quot;); System.out.println(&quot;-&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new AppleLoop().printPoem(); //a new apple list and output in one step } } AppleLoop.main(null); . Missing Apple Poem 5 apples on the table... ,--./,-. [ # ] | 1 | [ ] `._,._,&#39; ,--./,-. [ # ] | 2 | [ ] `._,._,&#39; ,--./,-. [ # ] | 3 | [ ] `._,._,&#39; ,--./,-. [ # ] | 4 | [ ] `._,._,&#39;&#39; ,--./,-. [ # ] | 5 | [ ] `._,._,&#39;&#39; 4 apples on the table... ,--./,-. [ # ] | 1 | [ ] `._,._,&#39; ,--./,-. [ # ] | 2 | [ ] `._,._,&#39; ,--./,-. [ # ] | 3 | [ ] `._,._,&#39; ,--./,-. [ # ] | 4 | [ ] `._,._,&#39;&#39; 3 apples on the table... ,--./,-. [ # ] | 1 | [ ] `._,._,&#39; ,--./,-. [ # ] | 2 | [ ] `._,._,&#39; ,--./,-. [ # ] | 3 | [ ] `._,._,&#39; 2 apples on the table... ,--./,-. [ # ] | 1 | [ ] `._,._,&#39; ,--./,-. [ # ] | 2 | [ ] `._,._,&#39; 1 apples on the table... ,--./,-. [ # ] | 1 | [ ] `._,._,&#39; No more apples are left! - THE END .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/09/16/frq.html",
            "relUrl": "/pbl/2022/09/16/frq.html",
            "date": " • Sep 16, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Boolean Expressions and If Statements",
            "content": "If Statements . If Statement . If statements can be used to excecute a method or a series of methods according to a condition if the condition is met. ## If Else Statement | Same thing as an if statements, but if something else is met other than the condition for the If Statement, then it would run a different line of code. ## If-Elseif-Else | If the condition of something is met, then run the code, if not then try to meet the next condition. If both are false then run the final condition. | . import java.util.Scanner; Scanner scanner = new Scanner(System.in); double c1; double c2; System.out.print(&quot;Enter your first number: &quot;); c1 = scanner.nextDouble(); System.out.println(x); System.out.print(&quot;Enter the operator (+,-,*,/): &quot;); // First input for operator choice char operator = scanner.next().charAt(0); System.out.println(operator); System.out.print(&quot;Enter your second number: &quot;); // Second input for operator chosen c2 = scanner.nextDouble(); System.out.println(y); if (operator == &#39;+&#39;) { System.out.println(&quot;The answer is: &quot;+ (c1 + c2)); // If addition is picked } else if (operator == &#39;-&#39;) { System.out.println(&quot;The answer is: &quot;+ (c1 - c2)); // If subtraction is picked } else if (operator == &#39;*&#39;) { System.out.println(&quot;The answer is: &quot;+ c1 * c2); // If multiplication is picked } else if (operator == &#39;/&#39;) { System.out.println(&quot;The answer is: &quot;+ c1 / c2); // If division is picked } else { System.out.println(&quot;Unknown Operation&quot;); // If anything else is chosen } . Enter your first number: 0.0 Enter the operator (+,-,*,/): / Enter your second number: 0.0 The answer is: 1.6666666666666667 . double c1; double c2; // Take input from the user Scanner scanner = new Scanner(System.in); System.out.print(&quot;Enter the first number: &quot;); // Take the inputs c1 = scanner.nextDouble(); System.out.println(c1); System.out.print(&quot;Enter the operator (+,-,*,/): &quot;); char operator = scanner.next().charAt(0); System.out.println(operator); System.out.print(&quot;Enter second number: &quot;); c2 = scanner.nextDouble(); System.out.println(c2); double output = 0; switch (operator) { // Case to add case &#39;+&#39;: output = c1 + c2; break; // Case to subtract case &#39;-&#39;: output = c1 - c2; break; // Case to multiply case &#39;*&#39;: output = c1 * c2; break; // Case to divide case &#39;/&#39;: output = c1 / c2; break; default: System.out.println(&quot;Unknown input&quot;); break; } System.out.println(&quot;The final equation: &quot;); System.out.println(c1 + &quot; &quot; + operator + &quot; &quot; + c2 + &quot; = &quot; + output); // Final result . Enter the first number: 5.0 Enter the operator (+,-,*,/): / Enter second number: 5.0 The final equation: 5.0 / 5.0 = 1.0 . De Morgan&#39;s Law . De Morgans Law of Union: The complement of the union of the two sets A and B will be equal to the intersection of A&#39; (complement of A) and B&#39; (complement of B). This is also known as De Morgan&#39;s Law of Union. It can be represented as (A ∪ B)&#39; = A&#39; ∩ B&#39;. . What this means is, we would think of it as, not A or B is not A and B. It should be oposite of the statement. | .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/09/09/boolean.html",
            "relUrl": "/pbl/2022/09/09/boolean.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Focus and Habits",
            "content": "Vocabulary and Gratitude . People walking around prestige colleges often find themselves depressed. Dopamine can be an evolutionary reason. When we obtain what we always wanted, we start picking out the flaws of it. This can be an evolutionary reason and can cause us to obtain the next best thing or cause us to be even more depressed. Gratitude may be the solution to these problems. | Somebody who I have gratitude for at school is my math teacher. He helps me understand the difficult topics while making it fun. Who I have gratitude for at home is my dad who helps me out with everything there is. | I think everyones goal in life is to be successful, but success has different definitions for everybody. For me is to be educated and complete everything I want to do. Completing goals in life is what makes someone the most happy. | .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/09/09/Focus_andHabits.html",
            "relUrl": "/pbl/2022/09/09/Focus_andHabits.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Code.org Notes",
            "content": "Methods . An instruction or action of an object | ex: myPainterPlus.turnLeft(); | Can use it to make things simpler and easier so you don&#39;t have the repeat things multiple times. | . Loops . while loop: Completes an action while a certain factor is true. | can be used to make complicated algorithms to complete tasks and make overall code simple. | ex: while (isOnBucket()) { takePaint(); }&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; | .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/09/05/code.org.html",
            "relUrl": "/pbl/2022/09/05/code.org.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Using Objects",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;-&quot;); System.out.println(&quot;Select A Function&quot;); System.out.println(&quot;-&quot;); System.out.println(&quot;1 - Subtraction&quot;); System.out.println(&quot;2 - Addition&quot;); System.out.println(&quot;3 - Multiplication&quot;); System.out.println(&quot;4 - Division&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;See you later!&quot;); quit = true; break; case 1: Scanner sc = new Scanner(System.in); System.out.println(&quot;Simple Subtraction &quot;); System.out.println(&quot;Please select first number: &quot;); int choice1 = sc.nextInt(); // System.out.println(&quot;Please select second number: &quot;); int choice2 = sc.nextInt(); System.out.print(&quot;Your answer is: &quot; + (choice1 - choice2)); sc.close(); break; case 2: Scanner asc = new Scanner(System.in); System.out.println(&quot;Simple Addition &quot;); System.out.println(&quot;Please select first number: &quot;); int add1 = asc.nextInt(); // System.out.println(&quot;Please select second number: &quot;); int add2 = asc.nextInt(); System.out.print(&quot;Your answer is: &quot; + (add1 + add2)); asc.close(); break; case 3: Scanner msc = new Scanner(System.in); System.out.println(&quot;Simple Multiplication &quot;); System.out.println(&quot;Please select first number: &quot;); int time1 = msc.nextInt(); // System.out.println(&quot;Please select second number: &quot;); int time2 = msc.nextInt(); System.out.print(&quot;Your answer is: &quot; + (time1 * time2)); msc.close(); break; case 4: Scanner dsc = new Scanner(System.in); System.out.println(&quot;Simple Division &quot;); System.out.println(&quot;Please select first number: &quot;); int div1 = dsc.nextInt(); // System.out.println(&quot;Please select second number: &quot;); int div2 = dsc.nextInt(); System.out.print(&quot;Your answer is: &quot; + (div1 / div2)); dsc.close(); break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Select A Function - 1 - Subtraction 2 - Addition 3 - Multiplication 4 - Division 0 - Quit - 3: Simple Multiplication Please select first number: Please select second number: Your answer is: 125 0: See you later! .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/08/30/usingobjects.html",
            "relUrl": "/pbl/2022/08/30/usingobjects.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Java Primitive Notebook",
            "content": "import java.util.Scanner; public class mpg { public static void main(String[] args) { // Car MPG calculator Scanner input; // define integers to be use for inputs and ending text int tripMiles = 0; int gallonsBurned = 0; double mpg = 0.0; // define strings to be used for inputs and ending text String car = null; String caryear = null; String finalString; // input for the car // primitive string input = new Scanner(System.in); System.out.print(&quot;Enter car make (ex: Ford Escape): &quot;); try { car = input.nextLine(); System.out.println(car); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } input.close(); // input for car year // primitive string input = new Scanner(System.in); System.out.print(&quot;What year? (ex: 2022): &quot;); try { caryear = input.nextLine(); System.out.println(caryear); } catch (Exception e) { // this may never happen System.out.println(&quot;Not a String, &quot; + e); } input.close(); // input total miles driven during single trip // primitive int input = new Scanner(System.in); System.out.print(&quot;Miles driven during single trip: &quot;); try { tripMiles = input.nextInt(); System.out.println(tripMiles); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer (form like 159), &quot; + e); } input.close(); // input total gallons burned during a trip // primitive int input = new Scanner(System.in); System.out.print(&quot;Enter gallons burned: &quot;); try { gallonsBurned = input.nextInt(); System.out.println(gallonsBurned); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer (form like 159), &quot; + e); } input.close(); // math function for finding the final MPG of the car mpg = tripMiles / gallonsBurned; // compound assignment operator to create final output finalString = &quot;The &quot; + caryear + &quot; &quot; + car + &quot; had an mpg of &quot; + mpg + &quot; miles per gallon &quot; ; System.out.println(finalString); } } // running the class mpg.main(null); . Enter car make (ex: Ford Escape): Ford Bronco What year? (ex: 2022): 1970 Miles driven during single trip: 216 Enter gallons burned: 12 The 1970 Ford Bronco had an mpg of 18.0 miles per gallon .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/08/28/javaprim.html",
            "relUrl": "/pbl/2022/08/28/javaprim.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Innovation - Primitives",
            "content": "Fastpages . Bash Install Checks | Java Primitives | . Code.org . Capture Information Plan . Information Capture . I will easily be able to capture and record information through fast pages and it will easily be accessible to me, my peers and anybody else. Fastpages makes it easy to record code and capture notes all at the same time. I can create a category for my notes and code. | . PBL vs Collegeboard . For Collegeboard assignments I can easily change the category to CB or Collegeboard and for PBL assignments I can change it to PBL. | .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/collegeboard/2022/08/28/innovationprimitives.html",
            "relUrl": "/pbl/collegeboard/2022/08/28/innovationprimitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Install Check",
            "content": "Python Version Checks . python --version . . Python 3.9.12 . python2 --version . . Python 2.7.18 . Java(c) Version Checks . java --version . . openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu120.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu120.04, mixed mode, sharing) . javac --version . . javac 11.0.16 . Anaconda Version Check . conda --version . . conda 4.13.0 . Node Package Manager . npm -version . . 3.10.10 . Kernel Checks . jupyter kernelspec list . . Available kernels: bash /home/kianp/.local/share/jupyter/kernels/bash java /home/kianp/.local/share/jupyter/kernels/java javascript /home/kianp/.local/share/jupyter/kernels/javascript python3 /home/kianp/.local/share/jupyter/kernels/python3 . Others . ls . . 2020-02-20-test.ipynb 2022-08-25-checks.ipynb ghtop_images 2020-08-22-testpost.ipynb 2022-08-28-innovationprimitives.ipynb my_icons 2022-08-22-java.ipynb 2022-08-28-javaprim.ipynb 2022-08-22-python.ipynb README.md . Hacks . test=&quot;python&quot; check=`conda list | grep $test` n=${#check} if [[ ${n} &gt; 0 ]]; then echo &quot;$check&quot; else echo &quot;$test not found&quot; fi . . ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 msgpack-python 1.0.2 py39hff7bd54_1 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 . conda list | grep &quot;jupyter&quot; . . jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/08/25/checks.html",
            "relUrl": "/pbl/2022/08/25/checks.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Python Notebook",
            "content": "test = &quot;This is a test message.&quot; print(test) . This is a test message. .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/08/22/python.html",
            "relUrl": "/pbl/2022/08/22/python.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Java Notebook",
            "content": "public class HelloStatic { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } HelloStatic.main(null); . Hello World! .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/08/22/java.html",
            "relUrl": "/pbl/2022/08/22/java.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "My First Blog",
            "content": "Hello, my name is Kian. .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2020/08/22/testpost.html",
            "relUrl": "/pbl/2020/08/22/testpost.html",
            "date": " • Aug 22, 2020"
        }
        
    
  
    
        ,"post28": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://kiannp44.github.io/KianFastPages/2020/02/20/test.html",
            "relUrl": "/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post29": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://kiannp44.github.io/KianFastPages/2020/01/14/test-markdown-post.html",
            "relUrl": "/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://kiannp44.github.io/KianFastPages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Populations",
          "content": ". Mexico Population . | .",
          "url": "https://kiannp44.github.io/KianFastPages/populations/",
          "relUrl": "/populations/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://kiannp44.github.io/KianFastPages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}