{
  
    
        "post0": {
            "title": "Code.org Notes",
            "content": "Methods . An instruction or action of an object | ex: myPainterPlus.turnLeft(); | Can use it to make things simpler and easier so you don&#39;t have the repeat things multiple times. | . Loops . while loop: Completes an action while a certain factor is true. | can be used to make complicated algorithms to complete tasks and make overall code simple. | ex: while (isOnBucket()) { takePaint(); }&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; | .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/09/11/code.org.html",
            "relUrl": "/pbl/2022/09/11/code.org.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Boolean Expressions and If Statements",
            "content": "If Statements . If Statement . If statements can be used to excecute a method or a series of methods according to a condition if the condition is met. ## If Else Statement | Same thing as an if statements, but if something else is met other than the condition for the If Statement, then it would run a different line of code. ## If-Elseif-Else | If the condition of something is met, then run the code, if not then try to meet the next condition. If both are false then run the final condition. | . import java.util.Scanner; Scanner scanner = new Scanner(System.in); double c1; double c2; System.out.print(&quot;Enter your first number: &quot;); c1 = scanner.nextDouble(); System.out.println(x); System.out.print(&quot;Enter the operator (+,-,*,/): &quot;); // First input for operator choice char operator = scanner.next().charAt(0); System.out.println(operator); System.out.print(&quot;Enter your second number: &quot;); // Second input for operator chosen c2 = scanner.nextDouble(); System.out.println(y); if (operator == &#39;+&#39;) { System.out.println(&quot;The answer is: &quot;+ (c1 + c2)); // If addition is picked } else if (operator == &#39;-&#39;) { System.out.println(&quot;The answer is: &quot;+ (c1 - c2)); // If subtraction is picked } else if (operator == &#39;*&#39;) { System.out.println(&quot;The answer is: &quot;+ c1 * c2); // If multiplication is picked } else if (operator == &#39;/&#39;) { System.out.println(&quot;The answer is: &quot;+ c1 / c2); // If division is picked } else { System.out.println(&quot;Unknown Operation&quot;); // If anything else is chosen } . Enter your first number: 0.0 Enter the operator (+,-,*,/): / Enter your second number: 0.0 The answer is: 1.6666666666666667 . De Morgan&#39;s Law .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/09/09/boolean.html",
            "relUrl": "/pbl/2022/09/09/boolean.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Focus and Habits",
            "content": "Vocabulary and Gratitude . People walking around prestige colleges often find themselves depressed. Dopamine can be an evolutionary reason. When we obtain what we always wanted, we start picking out the flaws of it. This can be an evolutionary reason and can cause us to obtain the next best thing or cause us to be even more depressed. Gratitude may be the solution to these problems. | Somebody who I have gratitude for at school is my math teacher. He helps me understand the difficult topics while making it fun. Who I have gratitude for at home is my dad who helps me out with everything there is. | I think everyones goal in life is to be successful, but success has different definitions for everybody. For me is to be educated and complete everything I want to do. Completing goals in life is what makes someone the most happy. | .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/09/09/Focus_andHabits.html",
            "relUrl": "/pbl/2022/09/09/Focus_andHabits.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Using Objects",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;-&quot;); System.out.println(&quot;Select A Function&quot;); System.out.println(&quot;-&quot;); System.out.println(&quot;1 - Subtraction&quot;); System.out.println(&quot;2 - Addition&quot;); System.out.println(&quot;3 - Multiplication&quot;); System.out.println(&quot;4 - Division&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;See you later!&quot;); quit = true; break; case 1: Scanner sc = new Scanner(System.in); System.out.println(&quot;Simple Subtraction &quot;); System.out.println(&quot;Please select first number: &quot;); int choice1 = sc.nextInt(); // System.out.println(&quot;Please select second number: &quot;); int choice2 = sc.nextInt(); System.out.print(&quot;Your answer is: &quot; + (choice1 - choice2)); sc.close(); break; case 2: Scanner asc = new Scanner(System.in); System.out.println(&quot;Simple Addition &quot;); System.out.println(&quot;Please select first number: &quot;); int add1 = asc.nextInt(); // System.out.println(&quot;Please select second number: &quot;); int add2 = asc.nextInt(); System.out.print(&quot;Your answer is: &quot; + (add1 + add2)); asc.close(); break; case 3: Scanner msc = new Scanner(System.in); System.out.println(&quot;Simple Multiplication &quot;); System.out.println(&quot;Please select first number: &quot;); int time1 = msc.nextInt(); // System.out.println(&quot;Please select second number: &quot;); int time2 = msc.nextInt(); System.out.print(&quot;Your answer is: &quot; + (time1 * time2)); msc.close(); break; case 4: Scanner dsc = new Scanner(System.in); System.out.println(&quot;Simple Division &quot;); System.out.println(&quot;Please select first number: &quot;); int div1 = dsc.nextInt(); // System.out.println(&quot;Please select second number: &quot;); int div2 = dsc.nextInt(); System.out.print(&quot;Your answer is: &quot; + (div1 / div2)); dsc.close(); break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Select A Function - 1 - Subtraction 2 - Addition 3 - Multiplication 4 - Division 0 - Quit - 3: Simple Multiplication Please select first number: Please select second number: Your answer is: 125 0: See you later! .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/08/30/usingobjects.html",
            "relUrl": "/pbl/2022/08/30/usingobjects.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Java Primitive Notebook",
            "content": "import java.util.Scanner; public class mpg { public static void main(String[] args) { // Car MPG calculator Scanner input; // define integers to be use for inputs and ending text int tripMiles = 0; int gallonsBurned = 0; double mpg = 0.0; // define strings to be used for inputs and ending text String car = null; String caryear = null; String finalString; // input for the car // primitive string input = new Scanner(System.in); System.out.print(&quot;Enter car make (ex: Ford Escape): &quot;); try { car = input.nextLine(); System.out.println(car); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } input.close(); // input for car year // primitive string input = new Scanner(System.in); System.out.print(&quot;What year? (ex: 2022): &quot;); try { caryear = input.nextLine(); System.out.println(caryear); } catch (Exception e) { // this may never happen System.out.println(&quot;Not a String, &quot; + e); } input.close(); // input total miles driven during single trip // primitive int input = new Scanner(System.in); System.out.print(&quot;Miles driven during single trip: &quot;); try { tripMiles = input.nextInt(); System.out.println(tripMiles); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer (form like 159), &quot; + e); } input.close(); // input total gallons burned during a trip // primitive int input = new Scanner(System.in); System.out.print(&quot;Enter gallons burned: &quot;); try { gallonsBurned = input.nextInt(); System.out.println(gallonsBurned); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer (form like 159), &quot; + e); } input.close(); // math function for finding the final MPG of the car mpg = tripMiles / gallonsBurned; // compound assignment operator to create final output finalString = &quot;The &quot; + caryear + &quot; &quot; + car + &quot; had an mpg of &quot; + mpg + &quot; miles per gallon &quot; ; System.out.println(finalString); } } // running the class mpg.main(null); . Enter car make (ex: Ford Escape): Ford Bronco What year? (ex: 2022): 1970 Miles driven during single trip: 216 Enter gallons burned: 12 The 1970 Ford Bronco had an mpg of 18.0 miles per gallon .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/08/28/javaprim.html",
            "relUrl": "/pbl/2022/08/28/javaprim.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Innovation - Primitives",
            "content": "Fastpages . Bash Install Checks | Java Primitives | . Code.org . Capture Information Plan . Information Capture . I will easily be able to capture and record information through fast pages and it will easily be accessible to me, my peers and anybody else. Fastpages makes it easy to record code and capture notes all at the same time. I can create a category for my notes and code. | . PBL vs Collegeboard . For Collegeboard assignments I can easily change the category to CB or Collegeboard and for PBL assignments I can change it to PBL. | .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/collegeboard/2022/08/28/innovationprimitives.html",
            "relUrl": "/pbl/collegeboard/2022/08/28/innovationprimitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Install Check",
            "content": "Python Version Checks . python --version . . Python 3.9.12 . python2 --version . . Python 2.7.18 . Java(c) Version Checks . java --version . . openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu120.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu120.04, mixed mode, sharing) . javac --version . . javac 11.0.16 . Anaconda Version Check . conda --version . . conda 4.13.0 . Node Package Manager . npm -version . . 3.10.10 . Kernel Checks . jupyter kernelspec list . . Available kernels: bash /home/kianp/.local/share/jupyter/kernels/bash java /home/kianp/.local/share/jupyter/kernels/java javascript /home/kianp/.local/share/jupyter/kernels/javascript python3 /home/kianp/.local/share/jupyter/kernels/python3 . Others . ls . . 2020-02-20-test.ipynb 2022-08-25-checks.ipynb ghtop_images 2020-08-22-testpost.ipynb 2022-08-28-innovationprimitives.ipynb my_icons 2022-08-22-java.ipynb 2022-08-28-javaprim.ipynb 2022-08-22-python.ipynb README.md . Hacks . test=&quot;python&quot; check=`conda list | grep $test` n=${#check} if [[ ${n} &gt; 0 ]]; then echo &quot;$check&quot; else echo &quot;$test not found&quot; fi . . ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 msgpack-python 1.0.2 py39hff7bd54_1 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 . conda list | grep &quot;jupyter&quot; . . jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/08/25/checks.html",
            "relUrl": "/pbl/2022/08/25/checks.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Python Notebook",
            "content": "test = &quot;This is a test message.&quot; print(test) . This is a test message. .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/08/22/python.html",
            "relUrl": "/pbl/2022/08/22/python.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Java Notebook",
            "content": "public class HelloStatic { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } HelloStatic.main(null); . Hello World! .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2022/08/22/java.html",
            "relUrl": "/pbl/2022/08/22/java.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "My First Blog",
            "content": "Hello, my name is Kian. .",
            "url": "https://kiannp44.github.io/KianFastPages/pbl/2020/08/22/testpost.html",
            "relUrl": "/pbl/2020/08/22/testpost.html",
            "date": " • Aug 22, 2020"
        }
        
    
  
    
        ,"post10": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://kiannp44.github.io/KianFastPages/2020/02/20/test.html",
            "relUrl": "/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post11": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://kiannp44.github.io/KianFastPages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://kiannp44.github.io/KianFastPages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://kiannp44.github.io/KianFastPages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}